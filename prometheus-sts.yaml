apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  replicas: 2
  podManagementPolicy: OrderedReady
  serviceName: prometheus
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      name: prometheus
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--web.external-url=$(EXTERNAL_URL)'
          - --web.enable-lifecycle
          - --storage.tsdb.retention.time=$(STORAGE_RETENTION)
          # - --storage.tsdb.retention.size=$(STORAGE_RETENTION_SIZE)
          - --storage.tsdb.wal-compression
          - --storage.tsdb.path=/prometheus/data
        ports:
        - name: web
          containerPort: 9090
        resources:
          # TEMPLATE: Set resource limits
          requests:
            cpu: .1
            memory: 500m
        env:
        - name: EXTERNAL_URL
          valueFrom:
            configMapKeyRef:
              name: prometheus-env
              key: external-url
        - name: STORAGE_RETENTION
          valueFrom:
            configMapKeyRef:
              name: prometheus-env
              key: storage-retention
        - name: STORAGE_MEMORY_CHUNKS
          valueFrom:
            configMapKeyRef:
              name: prometheus-env
              key: storage-memory-chunks
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: rules-volume
          mountPath: /etc/prometheus-rules
        - name: prometheus-data
          mountPath: /prometheus
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-configmap
      - name: rules-volume
        configMap:
          name: prometheus-rules
        #hostPath:
        #  path: /etc/ssl/etcd/
      securityContext:
        fsGroup: 1001
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: gp2
      resources:
        requests:
          # TEMPLATE: Pick a size
          storage: 20Gi
